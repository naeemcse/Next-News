// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



model categories{
  id Int @id @default(autoincrement())
  name String @db.VarChar(255) @unique
  news_list news_list[]
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)

}

model news_list{
  id Int @id @default(autoincrement())
  title String @db.VarChar(255)
  shot_description String @db.VarChar(255)
  img1 String @db.VarChar(255)
  img2 String @db.VarChar(255)
  img3 String @db.VarChar(255)
  img4 String @db.VarChar(255)
  kewwords String @db.VarChar(255)
  long_description String @db.VarChar(1000)
  type String @db.VarChar(255)
  catID Int 
  comments comments[]
  categories categories @relation(fields: [catID], references: [id], onDelete: Restrict, onUpdate: Cascade)
  createdAt DateTime @default(now()) @db.Timestamp(0) 
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)

}

model users {
  id        Int        @id @default(autoincrement())
  firstName String     @db.VarChar(255)
  lastName  String     @db.VarChar(255)
  email     String     @unique @db.VarChar(200)
  mobile    String     @unique @db.VarChar(15)
  password  String     @db.VarChar(255)
  otp       String     @db.VarChar(10)
  comments  comments[]
  createdAt DateTime   @default(now()) @db.Timestamp(0)
  updatedAt DateTime   @default(now()) @updatedAt @db.Timestamp(0)
}

model comments {
  id     Int   @id @default(autoincrement())
  userID Int
  postID Int
  users  users @relation(fields: [userID], references: [id], onDelete: Restrict, onUpdate: Cascade)
  news_list   news_list @relation(fields: [postID], references: [id], onDelete: Restrict, onUpdate: Cascade)
  description String    @db.VarChar(1000)
  createdAt    DateTime  @default(now()) @db.Timestamp(0)
  updatedAt    DateTime  @default(now()) @updatedAt @db.Timestamp(0)
}


model socials{
  id Int @id @default(autoincrement())
  facebook String @db.VarChar(255)
  youtube String @db.VarChar(255)
  twitter String @db.VarChar(255)
  linkdin String @db.VarChar(255)
  about String @db.VarChar(1000)
  address String @db.VarChar(255)

  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model subscribers{
  id Int @id @default(autoincrement())
  email String @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
}

model policies{
  id Int @id @default(autoincrement())
 long_des String @db.VarChar(1000)
type String @db.VarChar(255)
}